/*
 * Bitwise Courses - sample Java code
 * http://www.bitwisecourses.com
 */

/**
 *
 * @author huw
 */
public class NewJFrame extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        whileBtn = new javax.swing.JButton();
        whileNoBreak = new javax.swing.JButton();
        encryptBtn = new javax.swing.JButton();
        breakBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        whileBtn.setText("while...break");
        whileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whileBtnActionPerformed(evt);
            }
        });

        whileNoBreak.setText("while (no break)");
        whileNoBreak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whileNoBreakActionPerformed(evt);
            }
        });

        encryptBtn.setText("Encrypt");
        encryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptBtnActionPerformed(evt);
            }
        });

        breakBtn.setText("break");
        breakBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(breakBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(whileBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addGap(134, 134, 134)
                .addComponent(whileNoBreak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(encryptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(breakBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(whileBtn)
                    .addComponent(whileNoBreak)
                    .addComponent(encryptBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String testStr = "Hello world! Goodbye";

    
    private void whileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whileBtnActionPerformed
        int i;
        char c;
        String str = "";
        i = 0;
        while (i >= 0) {
            c = testStr.charAt(i);
            ta.append(String.format("[%d]='%c' ", i, c));
            if (c == '!') {
                break;
            }
            str += c;
            i++;
        }
        ta.append(String.format("\nAfter while loop, str='%s'\n", str));
    }//GEN-LAST:event_whileBtnActionPerformed

    private void whileNoBreakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whileNoBreakActionPerformed
        /* This code avoids using break. The end result is not quite the
         * same as the code in the previous method as str includes '!'        
         */
        int i;
        char c;
        String str = "";
        i = 0;
        c = '\u0000';  // default null char value
        while ((i >= 0) && (c != '!')) {
            // str += c;   // to make this code work like the pevious method,
                           // move this line to this position
            c = testStr.charAt(i);
            ta.append(String.format("[%d]='%c' ", i, c));
            str += c;
            i++;
        }
        ta.append(String.format("\nAfter while loop, str='%s'\n", str));
    }//GEN-LAST:event_whileNoBreakActionPerformed

    private void encryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptBtnActionPerformed
        int i;
        String str = "";
        String str2 = "";
        char c;
        // for loop #1 - encrypt string
        for (i = 0; i < testStr.length(); i++) {
            c = testStr.charAt(i);
            if (c == ' ') {
                str += c;
                continue;
            }
            if (c == '!') {                
                break;
            }
            str += (char) (testStr.charAt(i) + 1);
        }
        ta.append(String.format("\nEncrypted string is '%s'\n", str));
        str += '!'; // add a new string terminator '!'
        // for loop #2 - decrypt string
        for (i = 0; i < str.length(); i++) {
            c = str.charAt(i);
            if (c == ' ') {
                str2 += c;
                continue;
            }
            if (c == '!') {
                break;
            }
            str2 += (char) (str.charAt(i) - 1);
        }
        ta.append(String.format("\nDecrypted string is '%s'\n", str2));

    }//GEN-LAST:event_encryptBtnActionPerformed

    private void breakBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakBtnActionPerformed
         int i;
        i = 0;
        while (i < 10) {
            if (i == 5) {
                break;
            }
            ta.append(String.format("i = %d\n", i));
            i++;
        }
    }//GEN-LAST:event_breakBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton breakBtn;
    private javax.swing.JButton encryptBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta;
    private javax.swing.JButton whileBtn;
    private javax.swing.JButton whileNoBreak;
    // End of variables declaration//GEN-END:variables
}
