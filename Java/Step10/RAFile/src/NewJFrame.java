
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;

/*
 * Bitwise Courses - sample Java code
 * http://www.bitwisecourses.com
 **************************************************************************
 * NOTE: A sample text file 'test.txt' is provided in the folder for Step10
 * To use this, be sure to set the pathName variable to the full
 * path (directory and file name) where this file is found on your
 * disk
 **************************************************************************
 */
/**
 *
 * @author huw
 */
public class NewJFrame extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        readFileBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        readFileBtn.setText("Read File");
        readFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readFileBtnActionPerformed(evt);
            }
        });

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(readFileBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readFileBtn)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readFileBtnActionPerformed
        /*
         * NOTE: pathName uses a Windows-style path and you may need to change 
         * this on other operating systems. 
         */
        String pathName = "C://temp//test.txt";
        RandomAccessFile file = null;
        byte[] line = new byte[10];
        String s = "";
        int bytesread = -1;
        try {
            file = new RandomAccessFile(pathName, "r");
        } catch (FileNotFoundException fnfex) {
            ta.append("File not found! ");
            ta.append(fnfex.getMessage());
        }
        if (file == null) {
            ta.append("\nBe sure to use a valid file and path name");
            ta.append("\n e.g. \"" + pathName + "\"");
            ta.append("\nAnd verify that the file exists on disk!");
        } else {
            try {
                file.seek(0);
                ta.append("File pointer at start of file");
                bytesread = file.read(line);
                if (bytesread != -1) {
                    s = new String(line);
                    ta.append("\n" + s);
                } else {
                    ta.append("No more data to read! ");
                }
                file.seek(60);
                ta.append("\nFile pointer at position #60");
                bytesread = file.read(line);
                if (bytesread != -1) {
                    s = new String(line);
                    ta.append("\n" + s);
                } else {
                    ta.append("No more data to read! ");
                }
                file.seek(60+bytesread);
                ta.append("\nFile pointer at position #60+"+bytesread);
                bytesread = file.read(line);
                if (bytesread != -1) {
                    s = new String(line);
                    ta.append("\n" + s);
                } else {
                    ta.append("No more data to read! ");
                }
                file.seek(1000);
                ta.append("\nFile pointer at position #1000");
                bytesread = file.read(line);
                if (bytesread != -1) {
                    s = new String(line);
                    ta.append("\n" + s);
                } else {
                    ta.append("\nEnd Of File!!! -- No more data to read! ");
                }
            } catch (IOException ioex) {
                ta.append("\nOops! Something went wrong! ");
                ta.append(ioex.getMessage());
            } finally {
                try {
                    file.close();
                } catch (IOException ex) {
                    ta.append("\nFile close error: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_readFileBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton readFileBtn;
    private javax.swing.JTextArea ta;
    // End of variables declaration//GEN-END:variables
}
